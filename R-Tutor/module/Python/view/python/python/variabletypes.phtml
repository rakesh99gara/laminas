<?php
	$title = 'Python';
	$this->headTitle($title);
?>
<div class="container">
	<div class="row">
		<div class="col-md-4">
			<div class="flex-row my-5">
				<div class="card-body">
					<?php
						echo $this->partial('python/python/links');
					?>
				</div>
			</div>
		</div>
		<div class="col-md-8">
			<div class="card-cust flex-row my-5">
				<div class="card-body">
                	<h1 class="card-title text-center">Python - Variable Types</h1>
					<br>
					<p>
						Variables are nothing but reserved memory locations to store values. This means that when you create a variable you reserve some space in memory.
					</p>
					<p>
						Based on the data type of a variable, the interpreter allocates memory and decides what can be stored in the reserved memory. Therefore, by assigning different data types to variables, you can store integers, decimals or characters in these variables.
					</p>
					<h3>Assigning Values to Variables</h3>
					<p>Python variables do not need explicit declaration to reserve memory space. The declaration happens automatically when you assign a value to a variable. The equal sign (=) is used to assign values to variables.</p>
					<p>The operand to the left of the = operator is the name of the variable and the operand to the right of the = operator is the value stored in the variable.</p>
					<h3>Standard Data Types</h3>
					<p>The data stored in memory can be of many types. For example, a person's age is stored as a numeric value and his or her address is stored as alphanumeric characters. Python has various standard data types that are used to define the operations possible on them and the storage method for each of them.</p>
					<p>Python has five standard data types −</p>
					<ul>
						<li>Numbers</li>
						<li>String</li>
						<li>List</li>
						<li>Tuple</li>
						<li>Dictionary</li>
					</ul>
					<h3>Python Numbers</h3>
					<p>Number data types store numeric values. Number objects are created when you assign a value to them. For example −</p>
					<p class="code">
						var1 = 1
						var2 = 10
					</p>
					<p>
					You can also delete the reference to a number object by using the del statement. The syntax of the del statement is −
					</p>
					<p class="code">del var1[,var2[,var3[....,varN]]]]</p>
					<h3>Python Strings</h3>
					<p>Strings in Python are identified as a contiguous set of characters represented in the quotation marks. Python allows for either pairs of single or double quotes. Subsets of strings can be taken using the slice operator ([ ] and [:] ) with indexes starting at 0 in the beginning of the string and working their way from -1 at the end.</p>
					<p>The plus (+) sign is the string concatenation operator and the asterisk (*) is the repetition operator. For example −</p>
					<blockquote class="code">
					<p>str = 'Hello World!'</p>
					<p>print str          # Prints complete string</p>
					<p>print str[0]       # Prints first character of the string</p>
					<p>print str[2:5]     # Prints characters starting from 3rd to 5th</p>
					<p>print str[2:]      # Prints string starting from 3rd character</p>
					<p>print str * 2      # Prints string two times</p>
					<p>print str + "TEST" # Prints concatenated string</p>
					</blockquote>
					<h3>Python Lists</h3>
					<p>Lists are the most versatile of Python's compound data types. A list contains items separated by commas and enclosed within square brackets ([]). To some extent, lists are similar to arrays in C. One difference between them is that all the items belonging to a list can be of different data type.</p>
					<p>The values stored in a list can be accessed using the slice operator ([ ] and [:]) with indexes starting at 0 in the beginning of the list and working their way to end -1. The plus (+) sign is the list concatenation operator, and the asterisk (*) is the repetition operator. For example −</p>
					<blockquote class="code">
						<p>list = [ 'abcd', 786 , 2.23, 'john', 70.2 ]</p>
						<p>tinylist = [123, 'john']</p>
						<p>print list          # Prints complete list</p>
						<p>print list[0]       # Prints first element of the list</p>
						<p>print list[1:3]     # Prints elements starting from 2nd till 3rd </p>
						<p>print list[2:]      # Prints elements starting from 3rd element</p>
						<p>print tinylist * 2  # Prints list two times</p>
						<p>print list + tinylist # Prints concatenated lists</p>
					</blockquote>
					<h3>Python Tuples</h3>
					<p>A tuple is another sequence data type that is similar to the list. A tuple consists of a number of values separated by commas. Unlike lists, however, tuples are enclosed within parentheses.</p>
					<p>The main differences between lists and tuples are: Lists are enclosed in brackets ( [ ] ) and their elements and size can be changed, while tuples are enclosed in parentheses ( ( ) ) and cannot be updated. Tuples can be thought of as read-only lists. For example −</p>
					<blockquote class="code">
						<p>tuple = ( 'abcd', 786 , 2.23, 'john', 70.2  )</p>
						<p>tinytuple = (123, 'john')</p>
						<p>print tuple           # Prints complete list</p>
						<p>print tuple[0]        # Prints first element of the list</p>
						<p>print tuple[1:3]      # Prints elements starting from 2nd till 3rd </p>
						<p>print tuple[2:]       # Prints elements starting from 3rd element</p>
						<p>print tinytuple * 2   # Prints list two times</p>
						<p>print tuple + tinytuple # Prints concatenated lists</p>
					</blockquote>
					<hr>
					<div>
					<a href="<?= $this->url('python', ['action' => 'basicsyntax']) ?>" style="float: left" >Previous Page</a>
					<a href="<?= $this->url('python', ['action' => 'basicoperators']) ?>" style="float: right" >Next Page</a>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>